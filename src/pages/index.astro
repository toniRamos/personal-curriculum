---
import Layout from '../layouts/Layout.astro';
import Navigation from '../components/Navigation.astro';
import Social from '../components/Social.astro';
import Loader from '../components/Loader.astro';
import { getLangFromUrl, useTranslations } from '../i18n/ui';
import { siteConfig } from '../config/site';

// Image paths - using string literals for public folder assets
const profilePicture = '/portfolio/images/profile/profile-picture.jpg';
const portfolioScreenshot = '/portfolio/images/projects/portfolio-screenshot.png';
const videoStoreScreenshot = '/portfolio/images/projects/video-store-screenshot.png';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---

<Layout title={siteConfig.title}>
	<Loader />
	<Navigation />
	<Social />
	
	<!-- Hero Section -->
	<section id="hero" class="hero">
		<div class="container">
			<div class="hero-content">
				<p class="intro">{t('hero.intro')}</p>
				<h1 class="hero-title">{t('hero.name')}</h1>
				<h2 class="hero-subtitle">{t('hero.subtitle')}</h2>
				<p class="hero-description">
					{t('hero.description')}
				</p>
				<div class="hero-cta">
					<a href="#contact" class="cta-button">{t('hero.cta')}</a>
				</div>
			</div>
		</div>
	</section>

	<!-- About Section -->
	<section id="about" class="about">
		<div class="container">
			<div class="section-header reveal-element">
				<h2 class="section-title">
					<span class="section-number">{t('about.number')}</span>
					{t('about.title')}
				</h2>
			</div>
			<div class="about-content reveal-element">
				<div class="about-text">
					<p>
						{t('about.paragraphs.intro')}
					</p>
					<p>
						{t('about.paragraphs.journey')}
					</p>
					<p class="expertise-intro">
						{t('about.paragraphs.expertise')}
					</p>
					<p>
						{t('about.paragraphs.skills')}
					</p>
					<p>
						{t('about.paragraphs.experience')}
					</p>
					<p class="conclusion">
						<strong>{t('about.paragraphs.conclusion')}</strong>
					</p>
					<ul class="skills-list">
						<li>JavaScript (ES6+)</li>
						<li>TypeScript</li>
						<li>React</li>
						<li>Node.js</li>
						<li>Microservices</li>
						<li>MongoDB</li>
						<li>Redis</li>
						<li>Docker</li>
						<li>CI/CD</li>
						<li>DDD</li>
						<li>Clean Architecture</li>
						<li>Hexagonal Architecture</li>
					</ul>
				</div>
				<div class="about-image">
					<div class="image-wrapper animate-profile">
						<img 
							src={profilePicture}
							alt="Antonio Ramos - Arquitecto de Software"
							loading="lazy"
						/>
					</div>
				</div>
			</div>
		</div>
	</section>

	<!-- Experience Section -->
	<section id="experience" class="experience">
		<div class="container">
			<div class="section-header reveal-element">
				<h2 class="section-title">
					<span class="section-number">{t('experience.number')}</span>
					{t('experience.title')}
				</h2>
			</div>
			<div class="experience-content reveal-element">
				{t('experience.jobs').map((job, index) => (
					<div class="job-card reveal-stagger" key={index}>
						<div class="job-content">
							<h3>{job.title} <span class="company">@ {job.company}</span></h3>
							<p class="job-duration">{job.duration}</p>
							<p class="job-location">{job.location}</p>
							<ul class="job-responsibilities">
								{job.responsibilities.map((responsibility, respIndex) => (
									<li key={respIndex}>{responsibility}</li>
								))}
							</ul>
							<div class="job-technologies">
								{job.technologies.map((tech, techIndex) => (
									<span class="tech-tag" key={techIndex}>{tech}</span>
								))}
							</div>
						</div>
						<div class="job-highlight">
							<div class="job-company-name">{job.company}</div>
						</div>
					</div>
				))}
			</div>
		</div>
	</section>

	<!-- Projects Section -->
	<section id="projects" class="projects">
		<div class="container">
			<div class="section-header reveal-element">
				<h2 class="section-title">
					<span class="section-number">{t('projects.number')}</span>
					{t('projects.title')}
				</h2>
			</div>
			<div class="projects-content reveal-element">
				<div class="project-card featured reveal-stagger">
					<div class="project-content">
						<p class="project-overline">{t('projects.featured')}</p>
						<h3 class="project-title">
							<a href="https://github.com/toniRamos/personal-curriculum" target="_blank">Portfolio Personal</a>
						</h3>
						<div class="project-description">
							<p>
								Portfolio profesional multiidioma construido con Astro y TypeScript. 
								Implementa animaciones optimizadas, arquitectura limpia, deployment 
								con Docker y sistema completo de internacionalización (ES/EN).
							</p>
						</div>
						<div class="project-technologies">
							<span class="tech-tag">Astro</span>
							<span class="tech-tag">TypeScript</span>
							<span class="tech-tag">CSS3</span>
							<span class="tech-tag">Docker</span>
							<span class="tech-tag">Anime.js</span>
							<span class="tech-tag">i18n</span>
						</div>
					</div>
					<div class="project-image">
						<img 
							src={portfolioScreenshot}
							alt="Captura de pantalla del Portfolio Personal"
							loading="lazy"
						/>
					</div>
				</div>

				<div class="project-card reveal-stagger">
					<div class="project-content">
						<p class="project-overline">{t('projects.personal')}</p>
						<h3 class="project-title">
							<a href="https://github.com/toniRamos/video-store" target="_blank">Gestión de Videoclub</a>
						</h3>
						<div class="project-description">
							<p>
								Sistema moderno de gestión de videoclub con auditoría integral de usuarios, 
								catálogo de películas y operaciones CRUD completas. Construido con principios 
								de Domain-Driven Design (DDD) y sistema completo de auditoría para 
								cumplimiento normativo y seguimiento de cambios.
							</p>
						</div>
						<div class="project-technologies">
							<span class="tech-tag">Node.js</span>
							<span class="tech-tag">React</span>
							<span class="tech-tag">TypeScript</span>
							<span class="tech-tag">MongoDB</span>
							<span class="tech-tag">Redis</span>
							<span class="tech-tag">Docker</span>
							<span class="tech-tag">Express</span>
							<span class="tech-tag">DDD</span>
						</div>
					</div>
					<div class="project-image">
						<img 
							src={videoStoreScreenshot}
							alt="Captura de pantalla del Sistema de Gestión de Videoclub"
							loading="lazy"
						/>
					</div>
				</div>
			</div>
		</div>
	</section>

	<!-- Contact Section -->
	<section id="contact" class="contact">
		<div class="container">
			<div class="section-header reveal-element">
				<h2 class="section-title">
					<span class="section-number">{t('contact.number')}</span>
					{t('contact.title')}
				</h2>
			</div>
			<div class="contact-content reveal-element">
				<h2 class="contact-title">{t('contact.heading')}</h2>
				<p class="contact-description">
					{t('contact.description')}
				</p>
				<a href={`mailto:${siteConfig.email}`} class="contact-button">{t('contact.button')}</a>
			</div>
		</div>
	</section>
</Layout>

<style>
	/* Hero Section */
	.hero {
		display: flex;
		align-items: center;
		min-height: 100vh;
		padding-top: 100px;
	}

	.hero-content {
		max-width: 1000px;
	}

	.intro {
		margin: 0 0 20px 4px;
		color: #64ffda;
		font-family: 'SF Mono', 'Monaco', 'Inconsolata', 'Roboto Mono', monospace;
		font-size: 16px;
		font-weight: 400;
	}

	.hero-title {
		margin: 0;
		font-size: clamp(40px, 8vw, 80px);
		line-height: 1.1;
		color: #ccd6f6;
		font-weight: 600;
	}

	.hero-subtitle {
		margin: 0;
		font-size: clamp(40px, 8vw, 80px);
		line-height: 1.1;
		color: #8892b0;
		font-weight: 600;
	}

	.hero-description {
		margin: 20px 0 0 0;
		max-width: 540px;
		font-size: 20px;
		line-height: 1.3;
	}

	.hero-cta {
		margin-top: 50px;
	}

	.cta-button {
		color: #64ffda;
		background-color: transparent;
		border: 1px solid #64ffda;
		border-radius: 4px;
		padding: 20px 28px;
		font-size: 14px;
		font-family: 'SF Mono', 'Monaco', 'Inconsolata', 'Roboto Mono', monospace;
		line-height: 1;
		text-decoration: none;
		cursor: pointer;
		transition: all 0.25s cubic-bezier(0.645, 0.045, 0.355, 1);
		display: inline-block;
	}

	.cta-button:hover {
		background-color: rgba(100, 255, 218, 0.1);
		transform: translate3d(0, -2px, 0);
		text-decoration: none;
	}

	/* Section Styles */
	section {
		margin: 0 auto;
		padding: 100px 20px;
		max-width: 1000px;
		width: 100%;
		box-sizing: border-box;
	}

	/* Scroll Reveal Animations */
	.reveal-element {
		opacity: 0;
		transform: translateY(20px);
		filter: blur(1px);
		transition: all 0.4s cubic-bezier(0.645, 0.045, 0.355, 1);
	}

	.reveal-element.revealed {
		opacity: 1;
		transform: translateY(0);
		filter: blur(0px);
	}

	.reveal-stagger {
		transition-delay: 0.1s;
	}

	.reveal-stagger:nth-child(2) {
		transition-delay: 0.2s;
	}

	.reveal-stagger:nth-child(3) {
		transition-delay: 0.3s;
	}

	.reveal-stagger:nth-child(4) {
		transition-delay: 0.4s;
	}

	.section-header {
		display: flex;
		align-items: center;
		position: relative;
		margin: 10px 0 40px;
		width: 100%;
		white-space: nowrap;
	}

	.section-title {
		margin: 0;
		font-size: clamp(24px, 5vw, 32px);
		font-weight: 600;
		color: #ccd6f6;
		line-height: 1.1;
	}

	.section-number {
		margin-right: 10px;
		color: #64ffda;
		font-family: 'SF Mono', 'Monaco', 'Inconsolata', 'Roboto Mono', monospace;
		font-size: clamp(14px, 3vw, 20px);
		font-weight: 400;
	}

	.section-header::after {
		content: '';
		display: block;
		position: relative;
		top: -5px;
		width: min(300px, calc(100vw - 200px));
		height: 1px;
		margin-left: 20px;
		background-color: #233554;
		flex-shrink: 1;
	}

	/* About Section */
	.about-content {
		display: grid;
		grid-template-columns: 3fr 2fr;
		grid-gap: 50px;
	}

	.about-text p {
		margin-bottom: 15px;
	}

	.about-text .expertise-intro {
		font-weight: 500;
		color: #64ffda;
		margin-top: 20px;
		margin-bottom: 10px;
	}

	.about-text .conclusion {
		margin-top: 20px;
		margin-bottom: 20px;
	}

	.about-text .conclusion strong {
		color: #64ffda;
	}

	.skills-list {
		display: grid;
		grid-template-columns: repeat(2, minmax(140px, 200px));
		grid-gap: 0 10px;
		padding: 0;
		margin: 20px 0 0 0;
		overflow: hidden;
		list-style: none;
	}

	.skills-list li {
		position: relative;
		margin-bottom: 10px;
		padding-left: 20px;
		font-family: 'SF Mono', 'Monaco', 'Inconsolata', 'Roboto Mono', monospace;
		font-size: 13px;
		color: #8892b0;
	}

	.skills-list li::before {
		content: '▹';
		position: absolute;
		left: 0;
		color: #64ffda;
		font-size: 14px;
		line-height: 12px;
	}

	.about-image {
		position: relative;
		max-width: 300px;
	}

	.image-wrapper {
		position: relative;
		width: 100%;
		border-radius: 4px;
	}

	.animate-profile {
		opacity: 0;
		transform: scale(0.8) rotate(-5deg);
		transform-origin: center center;
		transition: all 1.2s cubic-bezier(0.68, -0.55, 0.265, 1.55);
	}

	.animate-profile.animated {
		opacity: 1;
		transform: scale(1) rotate(0deg);
	}

	.image-wrapper img {
		position: relative;
		border-radius: 4px;
		width: 100%;
		height: auto;
		max-height: 400px;
		object-fit: contain;
		filter: grayscale(100%) contrast(1) brightness(90%);
		mix-blend-mode: multiply;
		transition: all 0.25s cubic-bezier(0.645, 0.045, 0.355, 1);
	}

	.about-image:hover .image-wrapper img {
		filter: none;
		mix-blend-mode: normal;
	}

	.placeholder-image {
		position: relative;
		border-radius: 4px;
		background-color: #112240;
		color: #64ffda;
		width: 100%;
		height: 300px;
		display: flex;
		align-items: center;
		justify-content: center;
		font-family: 'SF Mono', 'Monaco', 'Inconsolata', 'Roboto Mono', monospace;
		font-size: 14px;
	}

	/* Experience Section */
	.experience {
		min-height: 100vh;
		display: block;
		position: relative;
		overflow: visible;
	}

	.job-card {
		position: relative;
		display: grid;
		grid-gap: 20px;
		grid-template-columns: repeat(12, 1fr);
		align-items: center;
		margin-bottom: 80px;
		padding: 30px 0;
	}

	.job-card:nth-child(even) .job-content {
		grid-column: 3 / -1;
		text-align: right;
	}

	.job-card:nth-child(even) .job-highlight {
		grid-column: 1 / 2;
	}

	.job-card:nth-child(even) .job-technologies {
		justify-content: flex-end;
	}

	.job-content {
		position: relative;
		grid-area: 1 / 1 / -1 / 11;
	}

	.job-content h3 {
		margin-bottom: 10px;
		font-size: 22px;
		font-weight: 500;
		color: #ccd6f6;
	}

	.company {
		color: #64ffda;
	}

	.job-duration {
		margin-bottom: 5px;
		font-family: 'SF Mono', 'Monaco', 'Inconsolata', 'Roboto Mono', monospace;
		font-size: 13px;
		color: #8892b0;
	}

	.job-location {
		margin-bottom: 25px;
		font-family: 'SF Mono', 'Monaco', 'Inconsolata', 'Roboto Mono', monospace;
		font-size: 13px;
		color: #64ffda;
		font-style: italic;
	}

	.job-responsibilities {
		background-color: #112240;
		box-shadow: 0 10px 30px -15px rgba(2, 12, 27, 0.7);
		padding: 35px 30px;
		border-radius: 6px;
		margin: 25px 0;
		list-style: none;
		position: relative;
		z-index: 2;
	}

	.job-responsibilities li {
		position: relative;
		padding-left: 30px;
		margin-bottom: 12px;
		color: #8892b0;
		font-size: 17px;
		line-height: 1.5;
	}

	.job-responsibilities li:last-child {
		margin-bottom: 0;
	}

	.job-responsibilities li::before {
		content: '▹';
		position: absolute;
		left: 0;
		color: #64ffda;
		font-size: 14px;
		line-height: 16px;
	}

	.job-technologies {
		display: flex;
		flex-wrap: wrap;
		gap: 8px;
		margin-top: 15px;
		position: relative;
		z-index: 2;
	}

	.tech-tag {
		background-color: rgba(100, 255, 218, 0.1);
		color: #64ffda;
		padding: 4px 8px;
		border-radius: 4px;
		font-size: 12px;
		font-family: 'SF Mono', 'Monaco', 'Inconsolata', 'Roboto Mono', monospace;
		border: 1px solid rgba(100, 255, 218, 0.3);
		transition: all 0.25s cubic-bezier(0.645, 0.045, 0.355, 1);
	}

	.tech-tag:hover {
		background-color: rgba(100, 255, 218, 0.2);
		transform: translateY(-2px);
	}

	.job-highlight {
		grid-area: 1 / 12 / -1 / -1;
		position: relative;
		display: flex;
		align-items: center;
		justify-content: center;
	}

	.job-company-name {
		font-family: 'SF Mono', 'Monaco', 'Inconsolata', 'Roboto Mono', monospace;
		font-size: 24px;
		font-weight: 600;
		color: #64ffda;
		text-align: center;
		line-height: 1.2;
		writing-mode: vertical-rl;
		text-orientation: mixed;
		letter-spacing: 3px;
		text-transform: uppercase;
		opacity: 0.8;
		transition: all 0.25s cubic-bezier(0.645, 0.045, 0.355, 1);
	}

	.job-card:hover .job-company-name {
		opacity: 1;
		color: #64ffda;
		transform: scale(1.05);
	}

	/* Projects Section */
	.project-card {
		position: relative;
		display: grid;
		grid-gap: 10px;
		grid-template-columns: repeat(12, 1fr);
		align-items: center;
		margin-bottom: 100px;
	}

	.project-card:nth-child(even) .project-content {
		grid-column: 7 / -1;
		text-align: right;
	}

	.project-card:nth-child(even) .project-image {
		grid-column: 1 / 8;
	}

	.project-content {
		position: relative;
		grid-area: 1 / 1 / -1 / 7;
	}

	.project-overline {
		margin: 10px 0;
		color: #64ffda;
		font-family: 'SF Mono', 'Monaco', 'Inconsolata', 'Roboto Mono', monospace;
		font-size: 13px;
		font-weight: 400;
	}

	.project-title {
		color: #ccd6f6;
		font-size: clamp(24px, 5vw, 28px);
		margin: 0 0 20px;
	}

	.project-title a {
		color: inherit;
	}

	.project-description {
		position: relative;
		z-index: 2;
		padding: 25px;
		border-radius: 4px;
		background-color: #112240;
		color: #a8b2d1;
		font-size: 18px;
		box-shadow: 0 10px 30px -15px rgba(2, 12, 27, 0.7);
	}

	.project-description p {
		margin: 0;
	}

	.project-technologies {
		display: flex;
		flex-wrap: wrap;
		position: relative;
		z-index: 2;
		margin: 25px 0 10px;
		gap: 10px;
	}

	.project-technologies .tech-tag {
		margin: 0;
	}

	.project-card:nth-child(even) .project-technologies {
		justify-content: flex-end;
	}

	/* Legacy support for existing project-tech */
	.project-tech {
		display: flex;
		flex-wrap: wrap;
		position: relative;
		z-index: 2;
		margin: 25px 0 10px;
		padding: 0;
		list-style: none;
	}

	.project-tech li {
		margin: 0 20px 5px 0;
		color: #8892b0;
		font-family: 'SF Mono', 'Monaco', 'Inconsolata', 'Roboto Mono', monospace;
		font-size: 13px;
		white-space: nowrap;
	}

	.project-card:nth-child(even) .project-tech {
		justify-content: flex-end;
	}

	.project-card:nth-child(even) .project-tech li {
		margin: 0 0 5px 20px;
	}

	.project-image {
		grid-area: 1 / 6 / -1 / -1;
		position: relative;
		z-index: 1;
	}

	.project-image img {
		width: 100%;
		height: auto;
		max-height: 300px;
		object-fit: cover;
		border-radius: 8px;
		filter: grayscale(100%) contrast(1) brightness(90%) blur(0.5px);
		transition: all 0.25s cubic-bezier(0.645, 0.045, 0.355, 1);
		mix-blend-mode: multiply;
		box-shadow: 0 4px 20px rgba(2, 12, 27, 0.4);
	}

	.project-card:hover .project-image img {
		filter: blur(0px);
		mix-blend-mode: normal;
		transform: translateY(-2px);
		box-shadow: 0 8px 30px rgba(2, 12, 27, 0.6);
	}

	.placeholder-project {
		width: 100%;
		height: 300px;
		background-color: #112240;
		border-radius: 4px;
		display: flex;
		align-items: center;
		justify-content: center;
		color: #64ffda;
		font-family: 'SF Mono', 'Monaco', 'Inconsolata', 'Roboto Mono', monospace;
		font-size: 14px;
	}

	/* Contact Section */
	.contact {
		max-width: 600px;
		margin: 0 auto 100px;
		text-align: center;
	}

	.contact-title {
		display: block;
		margin-bottom: 20px;
		font-size: clamp(40px, 5vw, 60px);
		color: #ccd6f6;
	}

	.contact-description {
		margin-bottom: 50px;
		color: #8892b0;
		font-size: 20px;
	}

	.contact-button {
		color: #64ffda;
		background-color: transparent;
		border: 1px solid #64ffda;
		border-radius: 4px;
		padding: 20px 28px;
		font-size: 14px;
		font-family: 'SF Mono', 'Monaco', 'Inconsolata', 'Roboto Mono', monospace;
		line-height: 1;
		text-decoration: none;
		cursor: pointer;
		transition: all 0.25s cubic-bezier(0.645, 0.045, 0.355, 1);
		display: inline-block;
	}

	.contact-button:hover {
		background-color: rgba(100, 255, 218, 0.1);
		transform: translate3d(0, -2px, 0);
		text-decoration: none;
	}

	/* Responsive */
	@media (max-width: 768px) {
		.hero {
			padding-top: 100px;
		}

		.about-content {
			display: block;
		}

		.about-image {
			margin: 50px auto 0;
			width: 70%;
		}

		.experience {
			min-height: auto;
			padding: 60px 15px;
			display: block !important;
			visibility: visible !important;
			opacity: 1 !important;
			position: relative;
			z-index: 1;
			width: 100%;
		}

		.experience-content {
			display: block;
			width: 100%;
		}

		.job-card {
			grid-template-columns: 1fr;
			margin-bottom: 40px;
			display: block;
			width: 100%;
		}

		.job-content,
		.job-card:nth-child(even) .job-content {
			grid-column: 1 / -1;
			text-align: left;
			display: block !important;
			width: 100%;
			position: relative;
			visibility: visible !important;
			opacity: 1 !important;
		}

		.job-highlight,
		.job-card:nth-child(even) .job-highlight {
			grid-column: 1 / -1;
			margin-top: 20px;
			justify-content: flex-start;
		}

		.job-technologies,
		.job-card:nth-child(even) .job-technologies {
			justify-content: flex-start;
		}

		.job-company-name {
			font-size: 18px;
			writing-mode: horizontal-tb;
			text-orientation: unset;
			letter-spacing: 1px;
		}

		.job-content h3,
		.job-duration,
		.job-location,
		.job-responsibilities {
			display: block !important;
			visibility: visible !important;
			opacity: 1 !important;
		}

		/* Force experience section visibility in mobile */
		.experience .reveal-element {
			opacity: 1 !important;
			transform: none !important;
			filter: none !important;
		}

		.experience .reveal-element.revealed {
			opacity: 1 !important;
			transform: none !important;
			filter: none !important;
		}

		.project-card {
			grid-template-columns: 1fr;
		}

		.project-content,
		.project-card:nth-child(even) .project-content {
			grid-column: 1 / -1;
			padding: 40px 40px 30px;
			z-index: 5;
			text-align: left;
		}

		.project-image,
		.project-card:nth-child(even) .project-image {
			grid-column: 1 / -1;
			height: 100%;
			opacity: 0.25;
		}

		.project-technologies,
		.project-card:nth-child(even) .project-technologies {
			justify-content: flex-start;
		}

		.project-tech,
		.project-card:nth-child(even) .project-tech {
			justify-content: flex-start;
		}

		.project-tech li,
		.project-card:nth-child(even) .project-tech li {
			margin: 0 20px 5px 0;
		}

		section {
			padding: 80px 15px;
		}

		.section-header::after {
			width: min(200px, calc(100vw - 150px));
		}

		.hero-content {
			padding: 0 10px;
		}

		.container {
			padding: 0 15px;
		}
	}

	/* Extra small devices */
	@media (max-width: 480px) {
		.navbar {
			padding: 0 15px;
		}

		section {
			padding: 60px 10px;
		}

		.section-header::after {
			width: min(150px, calc(100vw - 120px));
			margin-left: 10px;
		}

		.hero-content {
			padding: 0 5px;
		}

		.hero-title, .hero-subtitle {
			font-size: clamp(30px, 8vw, 60px);
		}

		.hero-description {
			font-size: 18px;
		}
	}
</style>

<script>
	// Elegant Scroll Reveal with Intersection Observer
	document.addEventListener('DOMContentLoaded', () => {
		// Configuration for the observer
		const observerOptions = {
			threshold: 0.15, // Trigger when 15% of element is visible
			rootMargin: '0px 0px -50px 0px' // Start animation a bit before element is fully visible
		};

		// Create intersection observer
		const observer = new IntersectionObserver((entries) => {
			entries.forEach(entry => {
				if (entry.isIntersecting) {
					// Add revealed class with a small delay for smoother effect
					setTimeout(() => {
						entry.target.classList.add('revealed');
					}, 50);
					
					// Stop observing this element once revealed
					observer.unobserve(entry.target);
				}
			});
		}, observerOptions);

		// Observe all reveal elements
		const revealElements = document.querySelectorAll('.reveal-element');
		revealElements.forEach(element => {
			observer.observe(element);
		});

		// Handle staggered elements separately for more control
		const staggerElements = document.querySelectorAll('.reveal-stagger');
		staggerElements.forEach((element, index) => {
			// Add reveal-element class for base styles
			element.classList.add('reveal-element');
			
			// Staggered observer with increasing delays
			const staggerObserver = new IntersectionObserver((entries) => {
				entries.forEach(entry => {
					if (entry.isIntersecting) {
						// Staggered delay based on index
						setTimeout(() => {
							entry.target.classList.add('revealed');
						}, 75 + (index * 50)); // 75ms base + 50ms per item
						
						staggerObserver.unobserve(entry.target);
					}
				});
			}, observerOptions);
			
			staggerObserver.observe(element);
		});

		// Special handling for navigation links to ensure direct access works
		const navLinks = document.querySelectorAll('a[href^="#"]');
		navLinks.forEach(link => {
			link.addEventListener('click', (e) => {
				const targetId = link.getAttribute('href').substring(1);
				const targetElement = document.getElementById(targetId);
				
				if (targetElement) {
					// Immediately reveal the target section and its children
					const sectionRevealElements = targetElement.querySelectorAll('.reveal-element');
					sectionRevealElements.forEach(el => {
						el.classList.add('revealed');
					});
				}
			});
		});

		console.log('Scroll reveal initialized - elements will appear elegantly as you scroll');

		// Profile image animation
		const profileImage = document.querySelector('.animate-profile');
		if (profileImage) {
			const profileObserver = new IntersectionObserver((entries) => {
				entries.forEach(entry => {
					if (entry.isIntersecting) {
						setTimeout(() => {
							entry.target.classList.add('animated');
						}, 300); // Small delay for better effect
						profileObserver.unobserve(entry.target);
					}
				});
			}, { threshold: 0.3 });
			
			profileObserver.observe(profileImage);
		}
	});

	// Force scroll to top on page load/refresh (after animations are set up)
	if ('scrollRestoration' in history) {
		history.scrollRestoration = 'manual';
	}
	
	window.addEventListener('beforeunload', () => {
		window.scrollTo(0, 0);
	});

	// Delayed scroll to top to not interfere with animations
	setTimeout(() => {
		window.scrollTo(0, 0);
	}, 50);
</script>
